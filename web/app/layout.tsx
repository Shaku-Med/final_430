import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { cookies, headers } from "next/headers";
import { Toaster } from "sonner";
import IsAuth from "./Auth/IsAuth/IsAuth";
import SetToken from "./Auth/IsAuth/SetToken";
import Script from "next/script";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  let usr = await IsAuth()
  let sign_inToken;
  let theme: any = `system`
  // 
  if(usr){
    let k: string[] = [`${process.env.PASS1}`, `${process.env.TOKEN2}`]
    sign_inToken = await SetToken({
      expiresIn: '1h',
      algorithm: 'HS512'
    }, k)
    
  }
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} ${theme} antialiased`}
      >
        <Toaster closeButton duration={20000} richColors position={`bottom-center`} theme={theme}/>
        {children}
      </body>
      {
        (usr && sign_inToken) && (
          <>
           <Script>
             {
              `
              window.addEventListener('load', () => {
                window.document.cookie = 'session=${sign_inToken}';
              })
              `
             }
           </Script>
          </>
        )
      }
    </html>
  );
}
