model Comment {
  id         String   @id @default(cuid())
  content    String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  blog_id    String
  user_id    String
  parent_id  String?
  likes      Int      @default(0)
  replies    Int      @default(0)

  // Relations
  blog         Blog         @relation(fields: [blog_id], references: [id], onDelete: Cascade)
  user         User         @relation(fields: [user_id], references: [id], onDelete: Cascade)
  parent       Comment?     @relation("CommentReplies", fields: [parent_id], references: [id], onDelete: Cascade)
  replies_list Comment[]    @relation("CommentReplies")
  likes_list   CommentLike[]

  @@index([blog_id])
  @@index([user_id])
  @@index([parent_id])
}

model CommentLike {
  id         String   @id @default(cuid())
  created_at DateTime @default(now())
  user_id    String
  comment_id String

  // Relations
  user    User    @relation(fields: [user_id], references: [id], onDelete: Cascade)
  comment Comment @relation(fields: [comment_id], references: [id], onDelete: Cascade)

  @@unique([user_id, comment_id])
  @@index([user_id])
  @@index([comment_id])
}

// Update Blog model to include comments relation
model Blog {
  // ... existing fields ...
  comments Comment[]
}

// Update User model to include comments and comment likes relations
model User {
  // ... existing fields ...
  comments      Comment[]
  comment_likes CommentLike[]
} 